{"version":3,"sources":["api/gitHub.js","variables.js","components/CardBody.js","components/UserName.js","components/Card.js","actions/index.js","components/App.js","reducers/index.js","reducers/dataReducer.js","index.js"],"names":["axios","create","baseURL","Variables","darkGrey","cream","blue","H1","styled","h1","_templateObject","IMG","img","_templateObject2","A","a","_templateObject3","CardBody","_ref","data","react_default","createElement","name","src","avatar_url","alt","login","bio","followers","following","public_repos","href","html_url","target","INPUT","input","UserName_templateObject","FORM","form","UserName_templateObject2","UserName","state","user","onFormSubmit","e","preventDefault","_this","props","onNameSubmit","_this2","this","onSubmit","type","value","onChange","setState","React","Component","Card","userName","fetchData","components_CardBody","components_UserName","connect","Object","asyncToGenerator","regenerator_default","mark","_callee","dispatch","response","wrap","_context","prev","next","gitHub","get","concat","sent","payload","stop","_x","apply","arguments","AppWrapper","main","App_templateObject","CardWrapper","div","App_templateObject2","App","components_Card","combineReducers","length","undefined","action","store","createStore","reducers","applyMiddleware","thunk","ReactDOM","render","es","components_App","document","querySelector"],"mappings":"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","file":"static/js/main.72fd9a9e.chunk.js","sourcesContent":["import axios from 'axios';\n\n// Set base url for GitHub API\nexport default axios.create({\n    baseURL: 'https://api.github.com'\n});\n","// Set up application wide styles\n\nconst Variables = {\n    darkGrey: '#222424',\n    cream: '#E7F4F6',\n    blue: '#4169E1'\n};\nexport default Variables;\n","import React from 'react';\nimport styled from 'styled-components';\nimport Variables from '../variables';\n\nconst H1 = styled.h1`\n    font-size: 2em;\n    font-weight: 700;\n`;\nconst IMG = styled.img`\n    max-height: 150px;\n    max-width: auto;\n`;\nconst A = styled.a`\n    color: ${Variables.darkGrey};\n    &:hover {\n        color: ${Variables.blue};\n    }\n`;\n\nconst CardBody = ({data}) => {\n    return (\n        <section>\n            <H1>{data.name}</H1>\n            <IMG src={data.avatar_url} alt=\"Avatar\" />\n            <h3>{data.login}</h3>\n            <p>{data.bio}</p>\n            <p>Followers: {data.followers} | Following: {data.following}</p>\n            <p>Repos: {data.public_repos}</p>\n            <p><A href={data.html_url} target=\"_blank\">Github site</A></p>\n        </section>\n    );\n};\nexport default CardBody;\n","import React from 'react';\nimport styled from 'styled-components';\nimport Variables from '../variables';\n\nconst INPUT = styled.input`\n    // display: block;\n    font-size: 100%;\n    margin: 1em 0;\n`;\n\nconst FORM = styled.form`\n    margin-top: 2em;\n    background-color: ${Variables.cream};\n    padding: 1em;\n`;\n\n\nclass UserName extends React.Component {\n    state = {user: ''};\n\n    onFormSubmit = (e) => {\n        e.preventDefault();\n        this.props.onNameSubmit(this.state.user);\n    };\n    render() {\n        return (\n            <FORM onSubmit={this.onFormSubmit}>\n                <label>Enter new username:</label>\n                <INPUT type=\"text\"\n                       value={this.state.user}\n                       onChange={(e) => this.setState({user: e.target.value})}\n                />\n            </FORM>\n        )\n    }\n};\nexport default UserName;\n","import React from 'react';\nimport {connect} from 'react-redux';\nimport {fetchData} from \"../actions\";\nimport CardBody from './CardBody';\nimport UserName from './UserName';\n\nclass Card extends React.Component {\n\n    componentDidMount() {\n        // Hard code user name for initial display\n        const user = 'Ronyonka';\n        this.props.fetchData(user);\n    }\n    onNameSubmit = (userName) => {\n        this.props.fetchData(userName);\n    };\n    render() {\n        const data = this.props.data;\n        if (!data) {\n            return <div>Loading...</div>\n        }\n        return (\n            <div>\n                <CardBody data={data} />\n                <UserName onNameSubmit={this.onNameSubmit} />\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {data: state.data}\n};\nexport default connect(mapStateToProps, {fetchData: fetchData})(Card);\n","import gitHub from '../api/gitHub';\n\nexport const fetchData = (user) => {\n    return async dispatch => {\n        const response = await gitHub.get(`/users/${user}`);\n        dispatch({ type: 'FETCH_DATA', payload: response.data })\n    };\n};\n","import React from 'react';\nimport Card from './Card';\nimport styled from 'styled-components';\nimport Variables from '../variables';\n\nconst AppWrapper = styled.main`\n    font-family: 'Roboto', sans-serif;\n    color: ${Variables.darkGrey};\n    text-align: center;\n    display: flex;\n    flex: 1;\n    justify-content: center;\n    align-items: center;\n    max-width: 1200px;\n    height: 90vh;\n    margin: 0px auto;\n    background-color: ${Variables.cream};\n    padding: 2em;\n`;\n\nconst CardWrapper = styled.div`\n    border: 2px solid ${Variables.darkGrey};\n    max-width: 250px;\n    padding: 1em;\n    background-color: #FFF;\n    height: fit-content;\n`;\n\nconst App = () => {\n    return(\n        <AppWrapper>\n            <CardWrapper>\n                <Card />\n            </CardWrapper>\n        </AppWrapper>\n    )\n};\nexport default App;\n","import {combineReducers} from \"redux\";\nimport dataReducer from './dataReducer';\n\nexport default combineReducers({\n    data: dataReducer\n});\n","export default (state = {}, action) => {\n    return (action.type === 'FETCH_DATA') ? action.payload : state;\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\n\nimport App from './components/App';\nimport reducers from './reducers';\n\nconst store = createStore(reducers, applyMiddleware(thunk));\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.querySelector('#root')\n);\n"],"sourceRoot":""}